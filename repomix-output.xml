This file is a merged representation of a subset of the codebase, containing specifically included files, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Only files matching these patterns are included: app/, components/, lib/
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
app/globals.css
app/layout.tsx
app/page.tsx
components/custom/AllPublicationFrame.tsx
components/custom/Citation.tsx
components/custom/FeaturedMemberCard.tsx
components/custom/Logo.tsx
components/custom/MemberCard.tsx
components/custom/Navigation.tsx
components/custom/NavigationButton.tsx
components/custom/ReadMoreButton.tsx
components/custom/ResearchCard.tsx
components/custom/SelectedCard.tsx
components/custom/SelectedPublicationFrame.tsx
components/custom/SubTitle.tsx
components/custom/VerticalMenu.tsx
components/Footer.tsx
components/Header.tsx
components/HeroSection.tsx
components/JoinSection.tsx
components/NewsSection.tsx
components/PublicationsSection.tsx
components/ResearchSection.tsx
components/TeamSection.tsx
components/ui/scroll-area.tsx
lib/api.ts
lib/data.ts
lib/utils.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="lib/utils.ts">
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
</file>

<file path="app/globals.css">
@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
</file>

<file path="components/custom/Citation.tsx">
const Citation = ({ content }: { content: string }) => {
  return (
    <p className="text-gray-300 text-center w-full px-10 mx-auto mb-12 text-sm sm:text-base">
      {content}
    </p>
  );
};

export default Citation;
</file>

<file path="components/custom/FeaturedMemberCard.tsx">
"use client";
import Image from "next/image";
import { TeamMemberItem } from "@/lib/api";

export default function FeaturedMemberCard({
  member,
}: {
  member: TeamMemberItem;
}) {
  return (
    <div className="grid grid-cols-3 grid-rows-4 col-span-3 row-span-4 gap-4">
      <div className="flex flex-col col-span-3 row-span-1 gap-1">
        <span className="text-white text-md font-normal">
          Mainly major in Parametric green building design research.
        </span>
        <span className="text-white text-md font-light">
          · Building performance and thermal comfort
        </span>
        <span className="text-white text-md font-light">
          · Climate Change and Urban Climate adaptability
        </span>
        <span className="text-white text-md font-light">
          · Artificial intelligence and machine learning
        </span>
      </div>
      <div className="col-span-3 row-span-3 w-full h-[368px] relative rounded-lg bg-[rgba(95,99,109,0.4)] overflow-hidden hover:shadow-lg transition-shadow duration-300">
        <div className="overflow-hidden w-full h-full">
          <div className="relative w-full h-full -bottom-10 -right-5">
            {member.image && (
              <Image
                src={member.image}
                alt={member.name}
                fill
                className="object-contain object-right-top"
                loading="lazy"
              />
            )}
          </div>
        </div>
        <div className="absolute top-0 left-0 mt-28 ml-10 flex items-center justify-center h-fit">
          <h3 className="text-2xl font-bold text-white">{member.name}</h3>
        </div>
      </div>
    </div>
  );
}
</file>

<file path="components/custom/Logo.tsx">
"use client";

import Image from "next/image";
import Link from "next/link";

export default function Logo() {
  return (
    <div className="flex items-center">
      <Link href="/" className="flex items-center">
        <Image
          src="https://www.cribelab.org/wp-content/uploads/2025/04/LOGO.svg"
          alt="CRIBE Lab Logo"
          width={32}
          height={32}
          className="h-8 w-8"
        />

        <span className="ml-2 text-xl font-roboto text-white font-bold">
          CRIBE Lab
        </span>
      </Link>
    </div>
  );
}
</file>

<file path="components/custom/MemberCard.tsx">
"use client";
import Image from "next/image";
import { TeamMemberItem } from "@/lib/api";

export default function MemberCard({ member }: { member: TeamMemberItem }) {
    console.log(member);
    return (
        <div className="relative col-span-1 row-span-1 bg-slate-900 rounded-md overflow-hidden">
            {member.image && (
                <Image
                    src={member.image}
                    alt={member.name}
                    fill
                    className="object-cover"
                />
            )}
        </div>
    );
}
</file>

<file path="components/custom/NavigationButton.tsx">
"use client";
import { Search, Menu, X, Earth } from "lucide-react";

export default function NavigationButton({
  isMenuOpen,
  toggleMenu,
}: {
  isMenuOpen: boolean;
  toggleMenu: () => void;
}) {
  return (
    <div className="flex items-center space-x-3">
      <button className="text-white hover:text-gray-300 transition-colors">
        <Search size={20} />
      </button>
      <button className="text-white hover:text-gray-300 transition-colors">
        <Earth size={20} />
      </button>
      <button
        className="lg:hidden text-white hover:text-gray-300 transition-colors"
        onClick={toggleMenu}
      >
        {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
      </button>
    </div>
  );
}
</file>

<file path="components/custom/ReadMoreButton.tsx">
"use client";
import Link from "next/link";
import { ArrowRight } from "lucide-react";

interface ReadMoreButtonProps {
  href: string;
  text?: string;
}

export default function ReadMoreButton({ href, text }: ReadMoreButtonProps) {
  return (
    <Link
      href={href}
      className="relative inline-flex items-center cursor-pointer outline-none border-0 bg-transparent p-0 font-inherit text-inherit w-48 group"
    >
      <span className="relative flex items-center justify-center w-12 h-12 bg-neutral-800 rounded-full transition-all duration-300 ease-in-out group-hover:w-full">
        <div className="absolute left-0 group-hover:left-2 flex items-center justify-center w-12 h-12 transition-all duration-300 ease-in-out">
          <ArrowRight className="w-5 h-5" />
        </div>
      </span>
      <span className="absolute left-16 text-[#282936] font-bold leading-normal text-center uppercase transition-all duration-800 ease-in-out group-hover:text-white">
        {text || "Read More"}
      </span>
    </Link>
  );
}
</file>

<file path="components/custom/SubTitle.tsx">
const SubTitle = ({ content }: { content: string }) => {
  return (
    <h2 className="text-3xl font-bold text-white text-center mb-10">
      {content}
    </h2>
  );
};

export default SubTitle;
</file>

<file path="components/Header.tsx">
"use client";

import { useState, useEffect } from "react";
import Logo from "@/components/custom/Logo";
import VerticalMenu from "@/components/custom/VerticalMenu";
import { getMeanData, MeanItem } from "@/lib/api";
import Navigation from "@/components/custom/Navigation";
import NavigationButton from "@/components/custom/NavigationButton";

export default function Header() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [meanItems, setMeanItems] = useState<MeanItem[]>([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const data = await getMeanData();
        setMeanItems(data);
      } catch (error) {
        console.error("Failed to fetch mean data:", error);
      }
    };
    fetchData();
  }, []);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  return (
    <header className="fixed top-0 left-0 right-0 z-50 w-full bg-black bg-opacity-80 backdrop-blur-sm border-b border-gray-800">
      <div className="mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          <Logo />
          <Navigation meanItems={meanItems} />
          <NavigationButton isMenuOpen={isMenuOpen} toggleMenu={toggleMenu} />
        </div>
      </div>
      {isMenuOpen && (
        <VerticalMenu
          meanItems={meanItems}
          toggleMenu={toggleMenu}
          isMenuOpen={isMenuOpen}
        />
      )}
    </header>
  );
}
</file>

<file path="components/HeroSection.tsx">
const HeroSection = () => {
  return (
    <section
      id="home"
      className="w-full h-screen flex items-center justify-center bg-black pt-16"
    >
      <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-roboto font-extrabold text-white leading-tight tracking-wide">
          LAB OF CLIMATE RESPONSIVE AND INTELLIGENT BUILT ENVIRONMENT
        </h1>
      </div>
    </section>
  );
};

export default HeroSection;
</file>

<file path="components/ui/scroll-area.tsx">
"use client";

import * as React from "react";
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area";

import { cn } from "@/lib/utils";

function ScrollArea({
  className,
  children,
  ...props
}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {
  return (
    <ScrollAreaPrimitive.Root
      data-slot="scroll-area"
      className={cn("relative", className)}
      {...props}
    >
      <ScrollAreaPrimitive.Viewport
        data-slot="scroll-area-viewport"
        className="focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1"
      >
        {children}
      </ScrollAreaPrimitive.Viewport>
      <ScrollBar />
      <ScrollAreaPrimitive.Corner />
    </ScrollAreaPrimitive.Root>
  );
}

function ScrollBar({
  className,
  orientation = "vertical",
  ...props
}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {
  return (
    <ScrollAreaPrimitive.ScrollAreaScrollbar
      data-slot="scroll-area-scrollbar"
      orientation={orientation}
      className={cn(
        "flex touch-none p-px transition-colors select-none",
        orientation === "vertical" &&
          "h-full w-2.5 border-l border-l-transparent",
        orientation === "horizontal" &&
          "h-2.5 flex-col border-t border-t-transparent",
        className,
      )}
      {...props}
    >
      <ScrollAreaPrimitive.ScrollAreaThumb
        data-slot="scroll-area-thumb"
        className="bg-border relative flex-1 rounded-full"
      />
    </ScrollAreaPrimitive.ScrollAreaScrollbar>
  );
}

export { ScrollArea, ScrollBar };
</file>

<file path="lib/data.ts">
// Research Areas
export const researchAreas = [
    {
        id: 'building-performance',
        title: 'Building Performance',
        description: 'Developing energy-efficient and sustainable building design strategies for optimal environmental performance.',
        image: 'https://images.pexels.com/photos/323780/pexels-photo-323780.jpeg'
    },
    {
        id: 'climate-adaptation-1',
        title: 'Climate Adaptation',
        description: 'Innovative solutions for buildings and cities to adapt to changing climate conditions.',
        image: 'https://images.pexels.com/photos/2119714/pexels-photo-2119714.jpeg'
    },
    {
        id: 'climate-adaptation-2',
        title: 'Climate Adaptation',
        description: 'Innovative solutions for buildings and cities to adapt to climate challenges.',
        image: 'https://images.pexels.com/photos/3693572/pexels-photo-3693572.jpeg'
    }
];

// Publications
export const publications = [
    {
        id: 1,
        title: 'A novel simulation design for indoor visual comfort and energy saving in typical office space',
        authors: 'Smith J., Johnson A., Williams B.',
        year: '2023',
        journal: 'Energy and Buildings',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 2,
        title: 'Optimizing building envelope for climate adaptation in urban environments',
        authors: 'Chen L., Miller R., Zhang Q.',
        year: '2023',
        journal: 'Building and Environment',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 3,
        title: 'Thermal comfort assessment in naturally ventilated educational buildings',
        authors: 'Wang Y., Patel S., Gupta V.',
        year: '2022',
        journal: 'Applied Energy',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 4,
        title: 'Machine learning approaches for predicting building energy consumption',
        authors: 'Shen P., Kim J., Brown T.',
        year: '2022',
        journal: 'Energy and Buildings',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 5,
        title: 'Performance evaluation of green roof systems in varying climate zones',
        authors: 'Liu M., Garcia A., Thompson E.',
        year: '2021',
        journal: 'Sustainable Cities and Society',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 6,
        title: 'Daylighting strategies for energy conservation in commercial buildings',
        authors: 'Park J., Davis C., Singh H.',
        year: '2021',
        journal: 'Renewable Energy',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 7,
        title: 'Smart facades: Integrated systems for adaptive building envelopes',
        authors: 'Wilson R., Taylor M., Lee Y.',
        year: '2020',
        journal: 'Automation in Construction',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 8,
        title: 'Urban heat island mitigation through green infrastructure planning',
        authors: 'Rodriguez C., White N., Martin K.',
        year: '2020',
        journal: 'Landscape and Urban Planning',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 9,
        title: 'Impact of climate change on building cooling demand in metropolitan areas',
        authors: 'Johnson P., Chang L., Anderson R.',
        year: '2019',
        journal: 'Applied Energy',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    },
    {
        id: 10,
        title: 'Passive design strategies for low-energy buildings in hot humid climates',
        authors: 'Lee S., Kumar A., Torres J.',
        year: '2019',
        journal: 'Energy and Buildings',
        thumbnail: 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg'
    }
];

// Team Members
export const teamMembers = [
    {
        id: 1,
        name: 'Pengyuan SHEN',
        role: 'Principal Investigator',
        image: 'https://images.pexels.com/photos/2379004/pexels-photo-2379004.jpeg'
    },
    {
        id: 2,
        name: 'Jane Smith',
        role: 'Assistant Professor',
        image: 'https://images.pexels.com/photos/3760514/pexels-photo-3760514.jpeg'
    },
    {
        id: 3,
        name: 'David Johnson',
        role: 'Postdoctoral Fellow',
        image: 'https://images.pexels.com/photos/2379005/pexels-photo-2379005.jpeg'
    },
    {
        id: 4,
        name: 'Lisa Chen',
        role: 'PhD Candidate',
        image: 'https://images.pexels.com/photos/1181686/pexels-photo-1181686.jpeg'
    },
    {
        id: 5,
        name: 'Michael Roberts',
        role: 'PhD Candidate',
        image: 'https://images.pexels.com/photos/2379429/pexels-photo-2379429.jpeg'
    },
    {
        id: 6,
        name: 'Sarah Williams',
        role: 'Research Assistant',
        image: 'https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg'
    },
    {
        id: 7,
        name: 'James Taylor',
        role: 'Research Assistant',
        image: 'https://images.pexels.com/photos/927022/pexels-photo-927022.jpeg'
    },
    {
        id: 8,
        name: 'Emma Wilson',
        role: 'Master Student',
        image: 'https://images.pexels.com/photos/773371/pexels-photo-773371.jpeg'
    },
    {
        id: 9,
        name: 'Kevin Brown',
        role: 'Master Student',
        image: 'https://images.pexels.com/photos/2379428/pexels-photo-2379428.jpeg'
    }
];

// News Items
export const newsItems = [
    {
        id: 1,
        title: 'Test News Title',
        excerpt: 'Test News Excerpt 1',
        date: '2023-04-15',
        image: 'https://images.pexels.com/photos/2990644/pexels-photo-2990644.jpeg'
    },
    {
        id: 2,
        title: 'Test News 2',
        excerpt: 'Test News Excerpt 2',
        date: '2023-03-22',
        image: 'https://images.pexels.com/photos/259751/pexels-photo-259751.jpeg'
    },
    {
        id: 3,
        title: 'Test News 3',
        excerpt: 'Test News Excerpt 3',
        date: '2023-02-10',
        image: 'https://images.pexels.com/photos/2774556/pexels-photo-2774556.jpeg'
    },
    {
        id: 4,
        title: 'Test News 4',
        excerpt: 'Test News Excerpt 4',
        date: '2023-01-05',
        image: 'https://images.pexels.com/photos/3183183/pexels-photo-3183183.jpeg'
    }
];
</file>

<file path="components/custom/Navigation.tsx">
"use client";

import { Link as ScrollLink } from "react-scroll";
import { MeanItem } from "@/lib/api";

export default function Navigation({ meanItems }: { meanItems: MeanItem[] }) {
  return (
    <nav className="hidden lg:flex space-x-8">
      {meanItems.map((item: MeanItem) => (
        <ScrollLink
          key={item.id}
          to={item.href}
          spy={true}
          smooth={true}
          offset={-10}
          duration={500}
          className="text-white hover:text-gray-300 px-2 py-1 transition-colors font-roboto font-medium cursor-pointer"
        >
          {item.label}
        </ScrollLink>
      ))}
    </nav>
  );
}
</file>

<file path="components/custom/ResearchCard.tsx">
"use client";
import { Image } from "@heroui/image";
// import Image from "next/image";
import ReadMoreButton from "./ReadMoreButton";
import { ResearchItem } from "@/lib/api";

const ResearchCard = ({ area }: { area: ResearchItem }) => {
  return (
    <div
      key={area.id}
      className="bg-neutral-900 rounded-lg overflow-hidden flex flex-col"
    >
      <div className="h-48 relative bg-neutral-800 overflow-hidden">
        {area.image && (
          <Image
            src={area.image}
            alt={area.title}
            isZoomed
            width={384}
            height={192}
            className="object-cover"
          />
        )}
      </div>
      <div className="p-6 relative flex-1 flex flex-col justify-between">
        <h3 className="text-xl font-bold text-white mb-2">{area.title}</h3>
        <p className="text-gray-400 text-sm mb-6">{area.description}</p>
        <ReadMoreButton href={`/research/${area.id}`} text="READ MORE" />
      </div>
    </div>
  );
};

export default ResearchCard;
</file>

<file path="components/custom/VerticalMenu.tsx">
"use client";
import { MeanItem } from "@/lib/api";
import { Link as ScrollLink } from "react-scroll";

export default function VerticalMenu({
  meanItems,
  toggleMenu,
  isMenuOpen,
}: {
  meanItems: MeanItem[];
  toggleMenu: () => void;
  isMenuOpen: boolean;
}) {
  return (
    <div className="lg:hidden bg-black">
      <div
        className={`transition-all duration-500 ease-out overflow-hidden ${isMenuOpen ? "max-h-screen" : "max-h-0"}`}
      >
        <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
          {meanItems.map((item: MeanItem) => (
            <ScrollLink
              key={item.id}
              to={item.id}
              smooth={true}
              offset={-100}
              onClick={toggleMenu}
              className="block px-3 py-2 text-white hover:bg-gray-800 rounded-md font-roboto font-medium cursor-pointer"
            >
              {item.label}
            </ScrollLink>
          ))}
        </div>
      </div>
    </div>
  );
}
</file>

<file path="components/JoinSection.tsx">
import Link from "next/link";
import SubTitle from "./custom/SubTitle";

const JoinSection = () => {
  return (
    <section id="join" className="w-full py-14 bg-neutral-900">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <SubTitle content="JOIN OUR LAB" />

        <p className="text-gray-300 max-w-2xl mx-auto mb-10 text-sm sm:text-base font-Roboto">
          Join us looking for passionate researchers to join our team. Currently
          recruiting excellent students in building science, thermal comfort and
          sustainability.
        </p>

        <div className="flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-6">
          <Link
            href="/join/students"
            className="inline-flex items-center justify-center px-6 py-3 border border-white text-sm font-medium rounded-sm text-white hover:bg-white hover:text-black transition-colors duration-200"
          >
            Graduate Students
          </Link>
          <Link
            href="/join/positions"
            className="inline-flex items-center justify-center px-6 py-3 border border-white text-sm font-medium rounded-sm text-white hover:bg-white hover:text-black transition-colors duration-200"
          >
            Open Positions
          </Link>
        </div>
      </div>
    </section>
  );
};

export default JoinSection;
</file>

<file path="components/NewsSection.tsx">
import Image from "next/image";
import Link from "next/link";
import { ArrowRight } from "lucide-react";
import { newsItems } from "@/lib/data";

const NewsSection = () => {
  return (
    <section id="news" className="w-full py-20 bg-black">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-3xl font-bold text-white text-center mb-16">
          NEWS
        </h2>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
          {newsItems.map((news) => (
            <div
              key={news.id}
              className="border border-gray-800 rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300"
            >
              <div className="p-3 border-b border-gray-800">
                <time className="text-xs text-gray-400">12/04/2025</time>
              </div>
              <div className="h-48 relative bg-neutral-800">
                {news.image && (
                  <Image
                    src={news.image}
                    alt={news.title}
                    fill
                    className="object-cover"
                  />
                )}
              </div>
              <div className="p-4">
                <h3 className="text-md font-medium text-white mb-2">
                  {news.title}
                </h3>
                <p className="text-sm text-gray-400 mb-3">{news.excerpt}</p>
              </div>
            </div>
          ))}
        </div>

        <div className="text-center mt-12">
          <Link
            href="/news"
            className="inline-flex items-center justify-center px-6 py-3 border border-white text-sm font-medium rounded-sm text-white hover:bg-white hover:text-black transition-colors duration-200"
          >
            READ MORE <ArrowRight className="ml-2 h-4 w-4" />
          </Link>
        </div>
      </div>
    </section>
  );
};

export default NewsSection;
</file>

<file path="components/PublicationsSection.tsx">
"use client";

import Link from "next/link";
import { ArrowRight } from "lucide-react";
import SubTitle from "@/components/custom/SubTitle";
import type { PublicationItem } from "@/lib/api";
import SelectedPublicationFrame from "@/components/custom/SelectedPublicationFrame";
import AllPublicationFrame from "@/components/custom/AllPublicationFrame";

interface PublicationsSectionProps {
  publications: PublicationItem[];
}

const PublicationsSection = ({ publications }: PublicationsSectionProps) => {
  const subtitle = "Publications";
  const selectedPublications = publications
    .filter((pub) => pub.is_selected)
    .slice(0, 5);
  return (
    <section id="publications" className="w-full py-20 bg-black">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <SubTitle content={subtitle} />
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Selected Publications */}
          <SelectedPublicationFrame
            selectedPublications={selectedPublications}
          />

          {/* All Publications with Year Filter */}
          <AllPublicationFrame publications={publications} />
        </div>

        <div className="text-center mt-12">
          <Link
            href="/publications"
            className="inline-flex items-center justify-center px-6 py-3 border border-white text-sm font-medium rounded-sm text-white hover:bg-white hover:text-black transition-colors duration-200"
          >
            READ MORE <ArrowRight className="ml-2 h-4 w-4" />
          </Link>
        </div>
      </div>
    </section>
  );
};

export default PublicationsSection;
</file>

<file path="components/ResearchSection.tsx">
import Citation from "./custom/Citation";
import SubTitle from "./custom/SubTitle";
import ResearchCard from "./custom/ResearchCard";
import { getResearchData } from "@/lib/api";

const ResearchSection = async () => {
  const citation =
    "Our Lab Focuses On Advancing Building Performance, Thermal Comfort, And Sustainability In The Context Of Changing Urban Environments And Climate Dynamics.";
  const subtitle = "RESEARCH";
  const researchData = await getResearchData();

  return (
    <section id="research" className="w-full py-20 bg-black">
      <div className="font-roboto max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <SubTitle content={subtitle} />
        <Citation content={citation} />
        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
          {researchData.map((area) => (
            <ResearchCard key={area.id} area={area} />
          ))}
        </div>
      </div>
    </section>
  );
};

export default ResearchSection;
</file>

<file path="components/TeamSection.tsx">
import SubTitle from "@/components/custom/SubTitle";
import Citation from "@/components/custom/Citation";
import { getTeamMembersData } from "@/lib/api";
import FeaturedMemberCard from "@/components/custom/FeaturedMemberCard";
import MemberCard from "@/components/custom/MemberCard";

export default async function TeamSection() {
  // Get featured team members (first one is the primary)
  const subtitle = "Team Members";
  const citation =
    "Highly Skilled Professionals, Green Building Design Research Backgrounds in Architecture & Building Science with Industry and Academic Experience including computational and Practical expertise";
  const teamMembersData = await getTeamMembersData();
  const featuredMember = teamMembersData.find((member) => member.is_featured);
  const otherMembers = teamMembersData.filter((member) => !member.is_featured);

  return (
    <section id="team" className="w-full py-20 bg-black">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <SubTitle content={subtitle} />
        <Citation content={citation} />

        <div className="h-fit grid grid-cols-7 md:grid-cols-7 grid-rows-4 gap-4">
          <div className="grid grid-cols-3 grid-rows-4 col-span-3 row-span-3 gap-4">
            {featuredMember && <FeaturedMemberCard member={featuredMember} />}
          </div>
          <div className="grid grid-cols-4 grid-rows-3 col-span-4 row-span-3 gap-4">
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
            <MemberCard member={otherMembers[0]} />
          </div>
          <div className="grid grid-cols-7 grid-rows-1 gap-4 col-span-7 row-span-1">
            {/* <MemberCard member={otherMembers[0]} />
               <MemberCard member={otherMembers[0]} />
               <MemberCard member={otherMembers[0]} />
               <MemberCard member={otherMembers[0]} />
               <MemberCard member={otherMembers[0]} />
               <MemberCard member={otherMembers[0]} />
               <MemberCard member={otherMembers[0]} /> */}
          </div>
        </div>
      </div>
    </section>
  );
}
</file>

<file path="app/layout.tsx">
import type { Metadata } from "next";
import "./globals.css";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
export const metadata: Metadata = {
    title: "Cribelab",
    description: "LAB OF CLIMATE RESPONSIVE AND INTELLIGENT BUILT ENVIRONMENT",
};
export default function RootLayout({
    children,
}: Readonly<{ children: React.ReactNode }>) {
    return (
        <html lang="en">
            <body className="antialiased">
                <Header />
                {children}
                <Footer />
            </body>
        </html>
    );
}
</file>

<file path="components/custom/SelectedCard.tsx">
import React from "react";
import Link from "next/link";
import Image from "next/image"; // 引入 Next.js Image 组件
import type { PublicationItem } from "@/lib/api"; // 假设你的接口定义在这里

// 1. 更新 Props 接口定义
interface SelectedCardProps {
  publication: PublicationItem; // 接收一个 PublicationItem 类型的对象
  className?: string; // className 设为可选
}

// 辅助函数：安全地渲染 HTML (可选，但推荐)
// 注意：这里只做了基础处理，如果 WP 内容可能不安全，应使用 DOMPurify 等库
const renderHTML = (htmlString: string | undefined | null) => {
  if (!htmlString) return { __html: "" };
  // 你可以在这里添加清理逻辑 if needed
  return { __html: htmlString };
};

// 2. 更新组件实现
export const SelectedCard = ({
    publication,
    className,
}: SelectedCardProps) => {
    return (
        <Link href={publication.url || "#"} className={`overflow-hidden hover:opacity-80 transition-opacity duration-300 flex flex-row w-full items-start gap-4 relative ${className}`}>
            {/* 3. 图片容器 */}
            <div className="flex w-40 h-32 bg-neutral-800 relative overflow-hidden rounded-sm">
                {" "}
                {/* 添加 flex-shrink-0 防止被压缩, overflow-hidden 和背景色 */}
                {publication.thumbnail ? (
                    // 使用 next/image 显示图片
                    <Image
                        src={publication.thumbnail}
                        alt={publication.title || "Publication thumbnail"} // 使用标题作为 alt 文本，提供默认值
                        fill // 使用 fill 填充容器
                        className="object-cover" // 保持图片比例并覆盖容器
                    />
                ) : (
                    // 如果没有图片，可以显示占位符或留空
                    <div className="w-full h-full flex items-center justify-center text-gray-500 text-xs">
                        No Image
                    </div>
                )}
            </div>

            {/* 4. 文本内容 */}
            <div className="flex-1 flex flex-col justify-between h-32 pt-1">
                <div>
                    <p
                        className="font-medium text-sm text-white leading-snug" // 例如：中等字重、小号字体、白色、行距紧凑
                        dangerouslySetInnerHTML={renderHTML(publication.title)}
                    >
                        {/* 内容由 dangerouslySetInnerHTML 设置 */}
                    </p>
                    <p className="mt-1 text-xs text-gray-400 line-clamp-2"> {/* 示例样式 */}
                        {publication.summary || "No summary available."}
                    </p>
                </div>
                <p className="text-xs text-gray-500"> {/* 示例样式 */}
                    {publication.authors || "Unknown authors"}
                </p>
            </div>
        </Link>
    );
};
</file>

<file path="components/custom/SelectedPublicationFrame.tsx">
"use client";

import { SelectedCard } from './SelectedCard';
import { ScrollArea } from '@/components/ui/scroll-area';
import { PublicationItem } from '@/lib/api';


const SelectedPublicationFrame = ({ selectedPublications }: { selectedPublications: PublicationItem[] }) => {
    return (
        <div className="bg-[rgba(217,217,217,0.1)] p-4 rounded-xl">
        <h3 className="text-xl font-semibold text-white mb-6 text-center">
            Selected Publications
        </h3>
        <ScrollArea className="h-96 md:h-128 w-full pr-4">
            <div className="space-y-6 p-4">
                {selectedPublications.length > 0 ? (
                    selectedPublications.map((pub) => (
                        <SelectedCard key={pub.id} publication={pub} />
                    ))
                ) : (
                    <p className="text-gray-400 text-sm text-center py-10">
                        No selected publications found. Mark publications as Selected in WordPress.
                    </p>
                )}
            </div>
        </ScrollArea>
    </div>
  );
};

export default SelectedPublicationFrame;
</file>

<file path="lib/api.ts">
// lib/api.ts

interface WordPressPost {
    id: number;
    title?: { 
        rendered: string;
    };
    _embedded?: {
        'wp:featuredmedia'?: {
            source_url?: string;
        }[];
    };
    acf?: { 
        description?: string;
        thumbnail?: { 
            url?: string;
            width?: number;
            height?: number;
        };
        authors?: string | null;
        year?: string | null;
        journal?: string | null;
        is_selected?: boolean;
        summary?: string | null;
        name?: string | null;
        role?: string | null;
        is_featured?: boolean;
        member_image?: {
            url?: string;
            width?: number;
            height?: number;
        };
        categories?: string | null;
        title?: string | null;
        thumbnail_describe?: string | null;
        abstract?: string | null;
        url?: string | null;
    };
}

export interface ResearchItem {
    id: number;
    title: string;
    description: string | null;
    image: string | null;
    width?: number;
    height?: number;
}

export async function getResearchData(): Promise<ResearchItem[]> {
    const apiUrl = process.env.NEXT_PUBLIC_WORDPRESS_API_URL;
    if (!apiUrl) {
        console.error("WordPress API URL is not configured in .env.local");
        return [];
    }
    const fetchUrl = `${apiUrl}/wp/v2/research`;
    try {
        const res = await fetch(fetchUrl);
        if (!res.ok) {
            console.error(`Failed to fetch research data: ${res.status} ${res.statusText}`);
            return [];
        }
        const data:WordPressPost[] = await res.json();
        const researchItems: ResearchItem[] = data.map((item) => {
            const acfImageUrl = item.acf?.thumbnail?.url || "https://www.cribelab.org/wp-content/uploads/2025/02/placeholder-1.svg";
            return {
                id: item.id,
                title: item.title?.rendered || 'Untitled Research',
                description: item.acf?.description || null,
                image: acfImageUrl || null,
                width: item.acf?.thumbnail?.width || undefined,
                height: item.acf?.thumbnail?.height || undefined,
            };
        });
        return researchItems;
    } catch (error) {
        console.error("Error fetching or processing research data:", error);
        return [];
    }
}

export interface PublicationItem {
    id: number;
    categories: string;
    authors: string;
    thumbnail?: string | null;
    thumbnail_describe?: string | null;
    year: string;
    title: string;
    summary?: string | null;
    journal?: string | null;
    abstract?: string | null;
    url?: string | null;
    is_selected?: boolean;
}

export async function getPublicationsData(): Promise<PublicationItem[]> {
    const apiUrl = process.env.NEXT_PUBLIC_WORDPRESS_API_URL;
    if (!apiUrl) {
        console.error("WordPress API URL is not configured in .env.local");
        return [];
    }

    const fetchUrl = `${apiUrl}/wp/v2/publication?_embed&orderby=date&order=desc&per_page=100`;
    try {
        const res = await fetch(fetchUrl);
        if (!res.ok) {
            console.error(`Failed to fetch publications: ${res.status} ${res.statusText}`)
            return [];
        }
        const data:WordPressPost[] = await res.json();

        const publications: PublicationItem[] = data.map((item) => {
            const featuredImageUrl = item._embedded?.['wp:featuredmedia']?.[0]?.source_url || null;
            const acfImageUrl = item.acf?.thumbnail?.url || null;
            return {
                id: item.id,
                categories: item.acf?.categories || 'Unknown Category',
                authors: item.acf?.authors || 'Unknown Authors',
                thumbnail: acfImageUrl || featuredImageUrl || null,
                thumbnail_describe: item.acf?.thumbnail_describe || null,
                year: item.acf?.year || 'N/A',
                title: item.acf?.title || 'Untitled Publication',
                summary: item.acf?.summary || null,
                journal: item.acf?.journal || null,
                abstract: item.acf?.abstract || null,
                url: item.acf?.url || null,
                is_selected: item.acf?.is_selected || false,
                
            };
        });

        return publications;
    } catch (error) {
        console.error("Error fetching or processing publications data:", error);
        return [];
    }
}

export interface TeamMemberItem {
    id: number;
    name: string;
    role?: string | null;
    image?: string | null;
    is_featured?: boolean;
    width?: number | null;
    height?: number | null;
}

export async function getTeamMembersData(): Promise<TeamMemberItem[]> {
    const apiUrl = process.env.NEXT_PUBLIC_WORDPRESS_API_URL;
    if (!apiUrl) {
        console.error("WordPress API URL is not configured in .env.local");
        return [];
    }
    const fetchUrl = `${apiUrl}/wp/v2/member`
    try{
        const res = await fetch(fetchUrl);
        if (!res.ok) {
            console.error(`Failed to fetch team members: ${res.status} ${res.statusText}`);
            return [];
        }
        const data:WordPressPost[] = await res.json();
        const teamMembers: TeamMemberItem[] = data.map((item) => {
            const acfImageUrl = item.acf?.member_image?.url || "https://www.cribelab.org/wp-content/uploads/2025/02/placeholder-1.svg";
            const width = item.acf?.member_image?.width || null;
            const height = item.acf?.member_image?.height || null;
            return {
                id: item.id,
                name: item.acf?.name || 'Unknown Member',
                role: item.acf?.role || null,
                image: acfImageUrl,
                is_featured: item.acf?.is_featured || false,
                width: width,
                height: height,
            };
        });

        return teamMembers;
    } catch (error) {
        console.error("Error fetching or processing team members data:", error);
        return [];
    }
}

export interface MeanItem {
    id: string;
    label: string;
    href: string;
}

export async function getMeanData(): Promise<MeanItem[]> {
    const meanitems: MeanItem[] = [
        {
            id: 'mean-home',
            label: 'Home',
            href: 'home',
        },
        {
            id: 'mean-research',
            label: 'Research',
            href: 'research',
        },
        {
            id: 'mean-publications',
            label: 'Publications',
            href: 'publications',
        },
        {
            id: 'mean-team',
            label: 'Team',
            href: 'team',
        },
        {
            id: 'mean-news',
            label: 'News',
            href: 'news',
        },
        {
            id: 'mean-join',
            label: 'Join Us',
            href: 'join',
        },
    ]
    return (meanitems);
}
</file>

<file path="app/page.tsx">
// TODO: 完成Publication页面

import HeroSection from "@/components/HeroSection";
import ResearchSection from "@/components/ResearchSection";
import PublicationsSection from "@/components/PublicationsSection";
import TeamSection from "@/components/TeamSection";
import NewsSection from "@/components/NewsSection";
import JoinSection from "@/components/JoinSection";
import { getPublicationsData } from "@/lib/api";

export const dynamic = "force-dynamic";

export default async function Home() {
  const [publicationsData] = await Promise.all([getPublicationsData()]);
  return (
    <main className="flex flex-col items-center min-h-screen bg-black text-white">
      <HeroSection />
      <ResearchSection /* researchAreas={researchData} */ />
      {/* 将获取到的数据作为 prop 传递 */}
      <PublicationsSection publications={publicationsData} />
      <TeamSection /* teamMembers={teamData} */ />
      <NewsSection />
      <JoinSection />
    </main>
  );
}
</file>

<file path="components/custom/AllPublicationFrame.tsx">
"use client";

import { useState } from "react";
import { ScrollArea } from '@/components/ui/scroll-area';
import { PublicationItem } from "@/lib/api";

export default function AllPublicationFrame({
  publications,
}: {
  publications: PublicationItem[];
}) {
  const [selectedYear, setSelectedYear] = useState("all");
  const years = [...new Set(publications.map((pub) => pub.year))].sort(
    (a, b) => parseInt(b) - parseInt(a),
  );

  const filteredPublications =
    selectedYear === "all"
      ? publications.sort((a, b) => parseInt(b.year) - parseInt(a.year))
      : publications.filter((pub) => pub.year === selectedYear);

    return (
        <div>
            <div className="flex justify-between items-center mb-6">
                <h3 className="text-xl w-fit font-semibold text-white">
                    All Publications
                </h3>
                <div className="grid grid-cols-7 gap-x-2 gap-y-1">
                    <button
                        onClick={() => setSelectedYear("all")}
                        className={`px-2 py-1 rounded-md text-sm ${selectedYear === "all" ? "text-white bg-neutral-800" : "text-gray-400"} cursor-pointer hover:bg-neutral-700 transition-colors duration-300`}
                    >
                        ALL
                    </button>
                    {years.map((year) => (
                        <button
                            key={year}
                            onClick={() => setSelectedYear(year)}
                            className={`px-1 py-1 rounded-md text-sm ${selectedYear === year ? "text-white bg-neutral-800" : "text-gray-400"} cursor-pointer hover:bg-neutral-700 transition-colors duration-300`}
                        >
                            {year}
                        </button>
                    ))}
                </div>
            </div>

            <div className="space-y-6">
                <ScrollArea className="h-96 md:h-128 w-full pr-4">
                    {filteredPublications.map((pub) => (
                        pub.url ? (
                            <a
                                key={pub.id}
                                href={pub.url}
                                target="_blank"
                                rel="noopener noreferrer"
                                className="block py-4 border-b border-gray-800 group"
                            >
                                <p className="text-sm text-gray-300 mb-1 group-hover:text-white transition-colors duration-200">{pub.title}</p>
                                <p className="text-xs text-gray-500">
                                    {pub.authors} ({pub.year})
                                </p>
                            </a>
                        ) : (
                            <div
                                key={pub.id}
                                className="py-4 border-b border-gray-800"
                            >
                                <p className="text-sm text-gray-300 mb-1">{pub.title}</p>
                                <p className="text-xs text-gray-500">
                                    {pub.authors} ({pub.year})
                                </p>
                            </div>
                        )
                    ))}
                </ScrollArea>
            </div>
        </div>
    )
}
</file>

<file path="components/Footer.tsx">
import { Mail, MapPin, Phone } from "lucide-react";
import Logo from "@/components/custom/Logo";

const Footer = () => {
    return (
        <footer className="w-full bg-neutral-900 border-t border-neutral-800 py-10">
            <div className="mx-auto px-4 sm:px-6 lg:px-8">
                <div className="flex gap-36 items-center justify-center">
                    <div className="flex flex-col items-start space-y-4 w-fit">
                        <Logo />
                        <p className="font-Roboto text-sm text-gray-400">
                            © 2025 Climate Responsive and Intelligent Built Environment Lab
                        </p>
                    </div>

          <div className="flex flex-col items-start space-y-4">
            <div className="flex items-center space-x-3 text-gray-300">
              <MapPin size={18} className="text-gray-400" />
              <span className="text-sm">
                School of Architecture, Design and Planning, University Campus
              </span>
            </div>
            <div className="flex items-center space-x-3 text-gray-300">
              <Mail size={18} className="text-gray-400" />
              <a
                href="mailto:contact@cribelab.edu"
                className="text-sm hover:text-white transition-colors"
              >
                contact@cribelab.edu
              </a>
            </div>
            <div className="flex items-center space-x-3 text-gray-300">
              <Phone size={18} className="text-gray-400" />
              <a
                href="tel:+1234567890"
                className="text-sm hover:text-white transition-colors"
              >
                +1 (234) 567-890
              </a>
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
</file>

</files>
